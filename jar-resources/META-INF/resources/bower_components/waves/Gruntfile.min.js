var fs=require("fs");module.exports=function(a){a.initConfig({less:{build:{files:{"dist/waves.css":"src/less/waves.less"}},test:{files:{"tests/less/waves.css":"src/less/waves.less"}}},cssmin:{options:{sourceMap:false},target:{files:{"dist/waves.min.css":"dist/waves.css","tests/less/waves.min.css":"tests/less/waves.css","tests/sass/waves.min.css":"tests/sass/waves.css","tests/scss/waves.min.css":"tests/scss/waves.css"}}},jshint:{files:["gruntfile.js","src/js/*.js"],options:{globals:{console:true},reporterOutput:""}},uglify:{options:{mangle:true,compress:{sequences:true,dead_code:true,conditionals:true,booleans:true,unused:true,if_return:true,join_vars:true,drop_console:true},sourceMap:true,sourceMapName:"dist/waves.min.js.map",preserveComments:"some"},js:{files:{"dist/waves.min.js":["src/js/waves.js"]}}},copy:{js:{expand:true,cwd:"src/js",src:"waves.js",dest:"dist/"},docs:{expand:true,cwd:"dist",src:["waves.min.css","waves.min.js"],dest:"docs/static"}},"sass-convert":{options:{from:"scss",to:"sass",indent:2},files:{cwd:"src/scss",src:"*.scss",dest:"src/sass"}},sass:{test:{files:[{expand:true,cwd:"src",src:["**/*.sass","**/*.scss"],dest:"tests/",ext:".css"}]}},clean:{test:["tests/*"]},watch:{script:{options:{spawn:false,event:["added","deleted","changed"]},files:["src/**/*.js","src/**/*.less"],tasks:["build"]},grunt:{files:["Gruntfile.js"]}}});a.registerTask("execute:less2scss","Convert less to scss.",function(){var b=this.async();var c=fs.readFileSync("src/less/waves.less",{encoding:"utf8"});c=c.replace(/@(?!import|media|keyframes|-)/g,"$");c=c.replace(/\.([\w\-]*)\s*\((.*)\)\s*\{/g,"@mixin $1($2){");c=c.replace(/\.([\w\-]*\(.*\)\s*;)/g,"@include $1");c=c.replace(/~(?:\"|\')(.*)(?:\"|\')/g,'#{"$1"}');fs.writeFileSync("src/scss/waves.scss",c);b()});a.registerTask("execute:test","Convert less to scss.",function(){var b=this.async();var e=fs.readFileSync("tests/less/waves.min.css",{encoding:"utf8"});var c=fs.readFileSync("tests/sass/waves.min.css",{encoding:"utf8"});var f=fs.readFileSync("tests/scss/waves.min.css",{encoding:"utf8"});var d=false;if(e!=c){a.log.writeln("ERROR: sass failed test.");d=true}if(e!=f){a.log.writeln("ERROR: scss failed test.");d=true}if(c!=f){a.log.writeln("WARNING: sass files aren't equal?");d=true}if(!d){a.log.writeln("PASS: conversions generated same CSS")}b()});a.loadNpmTasks("grunt-contrib-concat");a.loadNpmTasks("grunt-contrib-less");a.loadNpmTasks("grunt-contrib-jshint");a.loadNpmTasks("grunt-contrib-uglify");a.loadNpmTasks("grunt-contrib-copy");a.loadNpmTasks("grunt-contrib-watch");a.loadNpmTasks("grunt-contrib-sass");a.loadNpmTasks("grunt-sass-convert");a.loadNpmTasks("grunt-contrib-clean");a.loadNpmTasks("grunt-contrib-cssmin");a.registerTask("build",["less:build","jshint","uglify","copy","execute:less2scss","sass-convert","sass:test","less:test","cssmin","execute:test","clean:test"]);a.registerTask("default",["build","watch"])};